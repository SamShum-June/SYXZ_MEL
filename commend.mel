


/////////////////////杂项////////////////////////////////////////////////////
    ///////打开导入窗口 ////////////////////////
        global proc importSTHWindows(){

            if (`window -exists import_STH_window`)
        {
            deleteUI -window import_STH_window;
        }

        window -t "导入窗口" import_STH_window;
            rowColumnLayout -adjustableColumn true -w 710 -ca;
                frameLayout  -l "粘贴需要导入文件的路径"   -w 710 -h 60 -cll 0 -mh 5;
                    rowColumnLayout -numberOfRows 1  -rowHeight 1 25 -cs 1 5 ;
                        textField  -w 600  data_line; button -l"起飞了 需要等待" -w 100 -c "import_now" ;
                        setParent ..;
                        setParent ..;


        showWindow import_STH_window;
        }

        //导入mb文件
        global proc import_STH(){ 
            string $import_now=`textField -q -text data_line`;
            file -import  $import_now ;
        }

    /////////导入人物灯光////////////////////////
        global proc importCHAlig(){
            file -r -type "mayaBinary"  -ignoreVersion -gl -loadReferenceDepth "all" -shd "renderLayersByName" -mergeNamespacesOnClash false -namespace "cha_lig" -options "v=0;" "//192.168.23.65/ab$/Light_Library/_SYXZ/cha_lig.mb";
        }

    ////////导入阴影灯光/////////////////////////
        global proc importSHAlig(){
            redshiftCreateLight "RedshiftPhysicalLight";
            rename "rsPhysicalLight1" "sha_light";
            setAttr "sha_lightShape.lightType" 3;
            setAttr "sha_lightShape.affectsSpecular" 0;
            setAttr "sha_light.rotateX" -90;
            setAttr "sha_lightShape.on" 0;
            setAttr "sha_lightShape.SAMPLINGOVERRIDES_shadowSamplesScale" 8;
            setAttr "sha_lightShape.SAMPLINGOVERRIDES_numShadowSamples" 128;
        }

/////////// Optimize and Creat ID Aovs SET 整理和创建ID Aovs /////////////////
    /////////打开 Optimize and Creat ID Aovs SET 整理和创建ID Aovs 窗口/////////////
        global proc  Optimize_and_Creat_ID_Aovs_SET_window(){

                    if  (`window -exists Optimize_and_Creat_ID_Aovs_SET_window`)
            {
                    deleteUI -window Optimize_and_Creat_ID_Aovs_SET_window;
            }

            window -t "Optimize and Creat ID Aovs SET 整理和创建ID Aovs" Optimize_and_Creat_ID_Aovs_SET_window;
                rowColumnLayout -adjustableColumn true -w 500 -ca;
                frameLayout  -l "Optimize and Creat ID Aovs SET 整理和创建ID Aovs"   -w 150 -h 200 -cll 0 -mh 5 -bgc 0 0 0.134;
                    text -w 10 -h 10 -l "All Auto Creat ID 手动创建角色组后 按Auto Aovs自动创建角色ID 和 自动创建Aovs" -annotation "手动创建角色组后 按Auto Aovs自动创建角色ID 和 自动创建Aovs" ;
                    rowColumnLayout  -nr 1 -cs 1 5 -rowHeight 1 30;
                        button -l "1_Creat_Char_Group" -bgc 1 0.65 0.13 -w 160 -h 28 -annotation "角色打组" -c "Creat_Char_Group";
                        button -l "2_Auto Aovs ID EXR" -bgc 0 0.551 1  -w 160 -h 28 -annotation "自动创建AOVs & ID 输出EXR" -c "Auto_Aovs_ID_EXR";
                        button -l "2_Auto Aovs ID PNG" -bgc 1 0.5 0.6 -w 160 -h 28 -annotation "自动创建AOVs & ID 输出PNG" -c "Auto_Aovs_ID_PNG";
                        setParent ..;       
                    text -w 10  -h 10 -l "Auto Char ID 创建角色组后 手动选择角色创建ID" -annotation "创建角色组后 手动选择角色创建ID"; 
                    rowColumnLayout  -nr 1  -cs 1 5 -rowHeight 1 30;                        
                        button -l "1_SL Char Creat ID" -bgc 0.572 0.394 0.658  -w 160 -h 28 -annotation "选择角色自动创建ID" -c "SL_Char_Creat_ID";              
                        button -l "2_Auto Creat AOVs EXR" -bgc 0 0.551 1 -w 160 -h 28 -annotation "自动创建AOVs 输出EXR" -c "Auto_Creat_AOVs_EXR";
                        button -l "2_Auto Creat AOVs PNG" -bgc 1 0.5 0.6 -w 160 -h 28 -annotation "自动创建AOVs 输出EXR" -c "Auto_Creat_AOVs_PNG"; 
                        setParent ..;

                frameLayout -w 150 -h 100 -bgc 0 0 0.134  -cll 0 -mh 5 -l "选择面单个模型上色可以用下面这个" ;
                        text -w 10  -h 10 -l "Custom SET ID 自定义设置ID" -annotation "自定义设置ID";
                        rowColumnLayout  -nr 1  -cs 1 5 -rowHeight 1 30;
                            button -l "1_Custom ID AOVs"  -bgc 0.572 0.394 0.658 -w 120 -h 28 -annotation "创建ID的Aovs" -c "Custom_Char_IDAovs";
                            button -l "2_Custom Red ID" -bgc 0.32 0 0 -w 120 -h 28 -annotation "选择物体创建为红色ID" -c "Custom_Red_ID" ;
                            button -l "2_Custom Green ID" -bgc 0 0.32 0 -w 120 -h 28 -annotation "选择物体创建为绿色ID" -c "Custom_Green_ID" ;
                            button -l "2_Custom Blue ID" -bgc 0 0 0.32 -w 120 -h 28 -annotation "选择物体创建为蓝色ID"  -c "Custom_Blue_ID" ;
                            setParent ..;

                frameLayout -w 150 -h 13 -bgc 0 0 0.134  -cll 0 -mh 5 -l "手动创建场景 Aovs ID" ;
                        text -w 10  -h 10 -l "Cs Group Aovs ID 手动创建场景组 设置 Aovs" -annotation "手动创建场景组 设置 Aovs"; 
                        rowColumnLayout  -w 500 -numberOfColumns 3 -columnWidth 1 160 -columnWidth 2 160 -columnWidth 3 160 -cs 1 3 -cs 3 5 -cs 2 5 ;
                                button -l "1_Creat_SEN_Group" -bgc 1 0.65 0.13 -w 130 -h 28 -c "Creat_sen_Group";
                                button -l "2_SEN ID EXR" -bgc 0 0.551 1 -w 130 -h 28 -annotation "设置Aovs输出EXR" -c "Sen_Aovs_EXR";
                                button -l "2_SEN ID PNG" -bgc 1 0.5 0.6 -w 130 -h 28 -annotation "设置Aovs输出PNG" -c "Sen_Aovs_PNG";
                                button -l "3_SEN Red ID" -bgc 0.32 0 0 -w 130 -h 28 -annotation "选择物体创建为红色ID" -c "SEN_Red_ID";
                                button -l "3_SEN Green ID" -bgc 0 0.32 0  -w 130 -h 28 -annotation "选择物体创建为绿色ID"  -c "SEN_Green_ID";
                                button -l "3_SEN Blue ID" -bgc 0 0 0.32 -w 130 -h 28 -annotation "选择物体创建为蓝色ID"  -c "SEN_Blue_ID";
                        setParent ..;
                        setParent ..;

                showWindow Optimize_and_Creat_ID_Aovs_SET_window;
        }

//////////// All Auto Creat ID 手动创建角色组后 按Auto Aovs自动创建角色ID 和 自动创建Aovs /////////////////////////////////
    /////////////  1_Creat_Char_Group ////
        global proc Creat_Char_Group(){
            $LsSelectionrenderlayer = `editRenderLayerGlobals -q  -currentRenderLayer`;
            if ($LsSelectionrenderlayer!="defaultRenderLayer")
            {
            editRenderLayerGlobals -currentRenderLayer defaultRenderLayer;
            }

            string $char_1[] =`ls -sl`;

            if(!`objExists "Character_Group"`){
                select -cl; 
                CreateLocator;
                rename (`ls -sl`) "Character_Group";
                select -cl;
                CreateLocator;
                rename (`ls -sl`) "Transparent_Group"; 
                select -cl;
                CreateLocator;
                rename (`ls -sl`) "Cha_nor_Group";
                select -r Transparent_Group Cha_nor_Group;
                select -add Character_Group ;
                parent;    
            }

            select -cl;
            CreateLocator ;
            rename (`ls -sl`) "Char_G_yiyi";
            select -r Char_G_yiyi ;
            select -add Cha_nor_Group ;
            parent;
            select -r $char_1;
            select -add Char_G_yiyi ;
            parent;

            select -r Char_G_yiyi ;
            addAttr -ln "CharId"  -at double  -min 0 -max 100 -dv 0 |Character_Group|Cha_nor_Group|Char_G_yiyi;
            setAttr -e-keyable true |Character_Group|Cha_nor_Group|Char_G_yiyi.CharId;
            addAttr -ln "CharIdCheck"  -at double  -min 0 -max 1 -dv 0 |Character_Group|Cha_nor_Group|Char_G_yiyi;
            setAttr -e-keyable true |Character_Group|Cha_nor_Group|Char_G_yiyi.CharIdCheck;
            rename "Char_G_yiyi" "Char_G1";
        }

    ////////////   






















































////////////// AOVs ///////////////////////////////////////////////////////////////////////
    ///////////Creat Full AOVs
        global proc RS_Full_Aovs_sam(){
            RScustom_AO_Aov_Sam();
            RScustom_OC_Aov_Sam();
            RS_Emission_Aov_Sam();
            RS_DiffuseFilter_Aov_Sam();
            RS_DiffuseLightingRaw_Aov_Sam();
            RS_MotionVectors_Aov_Sam();
            RS_ReflectionsFilter_Aov_Sam();
            RS_ReflectionsRaw_Aov_Sam();
            RS_RefractionsFilter_Aov_Sam();
            RS_RefractionsRaw_Aov_Sam();
            RS_SpecularLighting_Aov_Sam();
            RS_TransGIRaw_Aov_Sam();
            RS_TransLightingRaw_Aov_Sam();
            RS_VolumeFogEmission_Aov_Sam();
            RS_Shadows_Aov_Sam();
            RS_P_Aov_Sam();
            RS_Z_Aov_Sam();
            RS_N_Aov_Sam();
            RS_SSSRaw_Aov_Sam();
            RS_SSS_Aov_Sam();
            RS_GIRaw_Aov_Sam();
        }
    ///////////Creat POSE AOVs
        global proc RS_Pose_Aovs_sam(){
            RScustom_AO_Aov_Sam();
            RScustom_OC_Aov_Sam();
            RS_DiffuseFilter_Aov_Sam();
            RS_Emission_Aov_Sam();
            RS_ReflectionsRaw_Aov_Sam();
            RS_SpecularLighting_Aov_Sam();
            RS_SSSRaw_Aov_Sam();
            RS_SSS_Aov_Sam();
        }
    ///////////Creat SEN AOVs
        global proc RS_Sen_Aovs_sam(){
            RScustom_AO_Aov_Sam();
            RS_Emission_Aov_Sam();
            RS_DiffuseFilter_Aov_Sam();
            RS_ReflectionsRaw_Aov_Sam();
            RS_Shadows_Aov_Sam();
            RS_TransGIRaw_Aov_Sam();
            RS_GIRaw_Aov_Sam();
            RS_SpecularLighting_Aov_Sam();
            RS_P_Aov_Sam();
            RS_Z_Aov_Sam();
            RS_N_Aov_Sam();
            RS_VolumeFogEmission_Aov_Sam();
            RS_TransGIRaw_Aov_Sam();
            RS_TransLightingRaw_Aov_Sam();
        }

///////////// AOVs prs ///////////////////////////////////////////////////////////////////
    //Creat AOV AO
        global proc RScustom_AO_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "rs_AO"`){
            rename (`redshiftCreateAov ("Custom")`) "rs_AO";
            setAttr -type "string" rs_AO.name "rs_AO";
            }
            if(!`objExists  "RS_aovAO_set_shader"`){
            shadingNode -n "RS_aovAO_set_shader" -asUtility RedshiftAmbientOcclusion;
            connectAttr -force RS_aovAO_set_shader.outColor rs_AO.defaultShader;
            }
            setAttr "RS_aovAO_set_shader.numSamples" 2048;
            setAttr "RS_aovAO_set_shader.spread" 0.8;
            setAttr "RS_aovAO_set_shader.fallOff" 3;
            setAttr "RS_aovAO_set_shader.maxDistance" 10;
            setAttr "rs_AO.enabled" 0;
            setAttr "rs_AO.exrBits" 32;
            setAttr -type "string" rs_AO.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_AO.dataType" 2;
            setAttr "rs_AO.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_AO"+"\n");
        }
    //Creat AOV OC
        global proc RScustom_OC_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "rs_OC"`){
            rename (`redshiftCreateAov ("Custom")`) "rs_OC";
            setAttr -type "string" rs_OC.name "rs_OC";
            }
            if(!`objExists  "RS_aovOC_set_shader"`){
            shadingNode -n "RS_aovOC_set_shader" -asUtility ramp;
            shadingNode -n "RS_aovOC_set_sampleshader" -asUtility samplerInfo;
            connectAttr -force RS_aovOC_set_shader.outColor rs_OC.defaultShader;
            }
            setAttr RS_aovOC_set_shader.colorEntryList[2].color -type double3 0.547278 0.547278 0.547278;
            setAttr RS_aovOC_set_shader.colorEntryList[2].position 0.547278;
            setAttr "RS_aovOC_set_shader.colorEntryList[0].color" -type double3 1 1 1 ;
            setAttr "RS_aovOC_set_shader.colorEntryList[1].color" -type double3 0 0 0 ;
            setAttr "RS_aovOC_set_shader.colorEntryList[2].position" 0.344;
            setAttr "RS_aovOC_set_shader.colorEntryList[2].color" -type double3 0 0 0 ;
            setAttr "RS_aovOC_set_shader.colorEntryList[1].position" 1;
            setAttr "RS_aovOC_set_shader.colorEntryList[0].position" 0;
            connectAttr -f RS_aovOC_set_sampleshader.facingRatio RS_aovOC_set_shader.vCoord;
            setAttr "RS_aovOC_set_shader.type" 0;
            setAttr "RS_aovOC_set_shader.interpolation" 4;
            setAttr "rs_OC.enabled" 0;
            setAttr "rs_OC.exrBits" 32;
            setAttr -type "string" rs_OC.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_OC.dataType" 2;
            setAttr "rs_OC.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_OC"+"\n");
        }
    //Creat AOV Emission
        global proc RS_Emission_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "Emission"`){
            rename (`redshiftCreateAov ("Emission")`) "rs_Emission";
            setAttr -type "string" rs_Emission.name "rs_Emission";
            }
            setAttr "rs_Emission.enabled" 0;
            setAttr "rs_Emission.exrBits" 32;
            setAttr -type "string" rs_Emission.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_Emission.dataType" 2;
            setAttr "rs_Emission.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Emission"+"\n");
        }
    //Creat AOV DiffuseFilter
        global proc RS_DiffuseFilter_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "DiffuseFilter"`){
            rename (`redshiftCreateAov ("Diffuse Filter")`) "rs_DiffuseFilter";
            setAttr -type "string" rs_DiffuseFilter.name "rs_DiffuseFilter";
            }
            setAttr "rs_DiffuseFilter.enabled" 0;
            setAttr "rs_DiffuseFilter.exrBits" 32;
            setAttr -type "string" rs_DiffuseFilter.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_DiffuseFilter.dataType" 2;
            setAttr "rs_DiffuseFilter.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_DiffuseFilter"+"\n");
        }
    //Creat AOV Diffuse Lighting Raw
        global proc RS_DiffuseLightingRaw_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "DiffuseLightingRaw"`){
            rename (`redshiftCreateAov ("Diffuse Lighting Raw")`) "rs_DiffuseLightingRaw";
            setAttr -type "string" rs_DiffuseLightingRaw.name "rs_DiffuseLightingRaw";
            }
            setAttr "rs_DiffuseLightingRaw.enabled" 0;
            setAttr "rs_DiffuseLightingRaw.exrBits" 32;
            setAttr -type "string" rs_DiffuseLightingRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_DiffuseLightingRaw.dataType" 2;
            setAttr "rs_DiffuseLightingRaw.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Diffuse Lighting Raw"+"\n");
        }
    //Creat AOV Motion Vectors
        global proc RS_MotionVectors_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "MotionVectors"`){
            rename (`redshiftCreateAov ("Motion Vectors")`) "rs_MotionVectors";
            setAttr -type "string" rs_MotionVectors.name "rs_MotionVectors";
            }
            setAttr "rs_MotionVectors.enabled" 0;
            setAttr "rs_MotionVectors.exrBits" 32;
            setAttr -type "string" rs_MotionVectors.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_MotionVectors.dataType" 2;
            setAttr "rs_MotionVectors.fileFormat" 1;
            setAttr "rs_MotionVectors.outputRawVectors" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Motion Vectors"+"\n");
        }
    //Creat AOV Normals
        global proc RS_N_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "N"`){
            rename (`redshiftCreateAov ("Normals")`) "rs_N";
            setAttr -type "string" rs_N.name "rs_N";
            }
            setAttr "rs_N.enabled" 0;
            setAttr "rs_N.exrBits" 32;
            setAttr -type "string" rs_N.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_N.dataType" 2;
            setAttr "rs_N.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Normals"+"\n");
        }
    //Creat AOV Reflections Filter
        global proc RS_ReflectionsFilter_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "ReflectionsFilter"`){
            rename (`redshiftCreateAov ("Reflections Filter")`) "rs_ReflectionsFilter";
            setAttr -type "string" rs_ReflectionsFilter.name "rs_ReflectionsFilter";
            }
            setAttr "rs_ReflectionsFilter.enabled" 0;
            setAttr "rs_ReflectionsFilter.exrBits" 32;
            setAttr -type "string" rs_ReflectionsFilter.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_ReflectionsFilter.dataType" 2;
            setAttr "rs_ReflectionsFilter.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Reflections Filter"+"\n");
        }
    //Creat AOV Reflections Raw
        global proc RS_ReflectionsRaw_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "ReflectionsRaw"`){
            rename (`redshiftCreateAov ("Reflections Raw")`) "rs_ReflectionsRaw";
            setAttr -type "string" rs_ReflectionsRaw.name "rs_ReflectionsRaw";
            }
            setAttr "rs_ReflectionsRaw.enabled" 0;
            setAttr "rs_ReflectionsRaw.exrBits" 32;
            setAttr -type "string" rs_ReflectionsRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_ReflectionsRaw.dataType" 2;
            setAttr "rs_ReflectionsRaw.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Reflections Raw"+"\n");
        }
    //Creat AOV Refractions Filter
        global proc RS_RefractionsFilter_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "RefractionsFilter"`){
            rename (`redshiftCreateAov ("Refractions Filter")`) "rs_RefractionsFilter";
            setAttr -type "string" rs_RefractionsFilter.name "rs_RefractionsFilter";
            }
            setAttr "rs_RefractionsFilter.enabled" 0;
            setAttr "rs_RefractionsFilter.exrBits" 32;
            setAttr -type "string" rs_RefractionsFilter.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_RefractionsFilter.dataType" 2;
            setAttr "rs_RefractionsFilter.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Refractions Filter"+"\n");
        }
    //Creat AOV Refractions Raw
        global proc RS_RefractionsRaw_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "RefractionsRaw"`){
            rename (`redshiftCreateAov ("Refractions Raw")`) "rs_RefractionsRaw";
            setAttr -type "string" rs_RefractionsRaw.name "rs_RefractionsRaw";
            }
            setAttr "rs_RefractionsRaw.enabled" 0;
            setAttr "rs_RefractionsRaw.exrBits" 32;
            setAttr -type "string" rs_RefractionsRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_RefractionsRaw.dataType" 2;
            setAttr "rs_RefractionsRaw.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Refractions Raw"+"\n");
        }
    //Creat AOV Specular Lighting
        global proc RS_SpecularLighting_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "SpecularLighting"`){
            rename (`redshiftCreateAov ("Specular Lighting")`) "rs_SpecularLighting";
            setAttr -type "string" rs_SpecularLighting.name "rs_SpecularLighting";
            }
            setAttr "rs_SpecularLighting.enabled" 0;
            setAttr "rs_SpecularLighting.exrBits" 32;
            setAttr -type "string" rs_SpecularLighting.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_SpecularLighting.dataType" 2;
            setAttr "rs_SpecularLighting.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Specular Lighting"+"\n");
        }
    //Creat AOV Sub Surface Scatter Raw
        global proc RS_SSSRaw_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "SSSRaw"`){
            rename (`redshiftCreateAov ("Sub Surface Scatter Raw")`) "rs_SSSRaw";
            setAttr -type "string" rs_SSSRaw.name "rs_SSSRaw";
            }
            setAttr "rs_SSSRaw.enabled" 0;
            setAttr "rs_SSSRaw.exrBits" 32;
            setAttr -type "string" rs_SSSRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_SSSRaw.dataType" 2;
            setAttr "rs_SSSRaw.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Sub Surface Scatter Raw"+"\n");
        }
    //Creat AOV Sub Surface Scatter
        global proc RS_SSS_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "SSS"`){
            rename (`redshiftCreateAov ("Sub Surface Scatter")`) "rs_SSS";
            setAttr -type "string" rs_SSS.name "rs_SSS";
            }
            setAttr "rs_SSS.enabled" 0;
            setAttr "rs_SSS.exrBits" 32;
            setAttr -type "string" rs_SSS.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_SSS.dataType" 2;
            setAttr "rs_SSS.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Sub Surface Scatter"+"\n");
        }
    //Creat AOV Translucency Lighting Raw
        global proc RS_TransLightingRaw_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "TransLightingRaw"`){
            rename (`redshiftCreateAov ("Translucency Lighting Raw")`) "rs_TransLightingRaw";
            setAttr -type "string" rs_TransLightingRaw.name "rs_TransLightingRaw";
            }
            setAttr "rs_TransLightingRaw.enabled" 0;
            setAttr "rs_TransLightingRaw.exrBits" 32;
            setAttr -type "string" rs_TransLightingRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_TransLightingRaw.dataType" 2;
            setAttr "rs_TransLightingRaw.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Translucency Lighting Raw"+"\n");
        }
    //Creat AOV World Position
        global proc RS_P_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "P"`){
            rename (`redshiftCreateAov ("World Position")`) "rs_P";
            setAttr -type "string" rs_P.name "rs_P";
            }
            setAttr "rs_P.enabled" 0;
            setAttr "rs_P.exrBits" 32;
            setAttr -type "string" rs_P.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            //setAttr "rs_P.dataType" 2;
            setAttr "rs_P.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_World Position"+"\n");
        }
    //Creat AOV Depth
        global proc RS_Z_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "Z"`){
            rename (`redshiftCreateAov ("Depth")`) "rs_Z";
            setAttr -type "string" rs_Z.name "rs_Z";
            }
            setAttr "rs_Z.enabled" 0;
            setAttr "rs_Z.exrBits" 32;
            setAttr -type "string" rs_Z.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            //setAttr "rs_Z.dataType" 2;
            setAttr "rs_Z.fileFormat" 1;
            setAttr "rs_Z.filterMode" 3;
            setAttr "rs_Z.depthMode" 1;
            setAttr "rs_Z.minDepth" 0;
            setAttr "rs_Z.maxDepth" 100000;
            redshiftUpdateActiveAovList();
            print ("rs_Depth"+"\n");
        }
    //Creat AOV Volume Fog Emission
        global proc RS_VolumeFogEmission_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "VolumeFogEmission"`){
            rename (`redshiftCreateAov ("Volume Fog Emission")`) "rs_VolumeFogEmission";
            setAttr -type "string" rs_VolumeFogEmission.name "rs_VolumeFogEmission";
            }
            setAttr "rs_VolumeFogEmission.enabled" 0;
            setAttr "rs_VolumeFogEmission.exrBits" 32;
            setAttr -type "string" rs_VolumeFogEmission.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_VolumeFogEmission.dataType" 2;
            setAttr "rs_VolumeFogEmission.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Volume Fog Emission"+"\n");
        }
    //Creat AOV Shadows
        global proc RS_Shadows_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "Shadows"`){
            rename (`redshiftCreateAov ("Shadows")`) "rs_Shadows";
            setAttr -type "string" rs_Shadows.name "rs_Shadows";
            }
            setAttr "rs_Shadows.enabled" 0;
            setAttr "rs_Shadows.exrBits" 32;
            setAttr -type "string" rs_Shadows.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_Shadows.dataType" 2;
            setAttr "rs_Shadows.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Shadows"+"\n");
        }
    //Creat AOV Global Illumination Raw
        global proc RS_GIRaw_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "GIRaw"`){
            rename (`redshiftCreateAov ("Global Illumination Raw")`) "rs_GIRaw";
            setAttr -type "string" rs_GIRaw.name "rs_GIRaw";
            }
            setAttr "rs_GIRaw.enabled" 0;
            setAttr "rs_GIRaw.exrBits" 32;
            setAttr -type "string" rs_GIRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_GIRaw.dataType" 2;
            setAttr "rs_GIRaw.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Global Illumination Raw"+"\n");
        }
    //Creat AOV Specular Lighting
    global proc RS_SpecularLighting_Aov_Sam(){
        source redshiftCreateAovTab;
        setAttr "defaultRenderGlobals.enableDefaultLight" 0;
        if(!`objExists "SpecularLighting"`){
        rename (`redshiftCreateAov ("Specular Lighting")`) "rs_SpecularLighting";
        setAttr -type "string" rs_SpecularLighting.name "rs_SpecularLighting";
        }
        setAttr "rs_SpecularLighting.enabled" 0;
        setAttr "rs_SpecularLighting.exrBits" 32;
        setAttr -type "string" rs_SpecularLighting.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
        setAttr "rs_SpecularLighting.dataType" 2;
        setAttr "rs_SpecularLighting.fileFormat" 1;
        redshiftUpdateActiveAovList();
        print ("rs_Specular Lighting"+"\n");
    }
    //Creat AOV Translucency GI Raw
        global proc RS_TransGIRaw_Aov_Sam(){
            source redshiftCreateAovTab;
            setAttr "defaultRenderGlobals.enableDefaultLight" 0;
            if(!`objExists "TransGIRaw"`){
            rename (`redshiftCreateAov ("Translucency GI Raw")`) "rs_TransGIRaw";
            setAttr -type "string" rs_TransGIRaw.name "rs_TransGIRaw";
            }
            setAttr "rs_TransGIRaw.enabled" 0;
            setAttr "rs_TransGIRaw.exrBits" 32;
            setAttr -type "string" rs_TransGIRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
            setAttr "rs_TransGIRaw.dataType" 2;
            setAttr "rs_TransGIRaw.fileFormat" 1;
            redshiftUpdateActiveAovList();
            print ("rs_Translucency GI Raw"+"\n");
        }

/////////// Creat ISO //////////////////////////////////////
    //Creat 2017 RedshiftPhotographicExposure
        global proc ISO_maya2017(){
            shadingNode -asUtility RedshiftPhotographicExposure;
            rename rsPhotographicExposure1 "ISO_maya2017" ;
            setAttr "ISO_maya2017.enable" 0;
            redshiftChangeGlobalShader ISO_maya2017 "exposure";
            redshiftUpdateGlobalShader "exposure" "rsControl_expText" "rsControl_expSelButton";
            autoUpdateAttrEd;
            print ("Creat_ISO_maya2017"+"\n");
        }
    //Creat 2019 postEffects
        global proc ISO_maya2019(){
            shadingNode -asUtility RedshiftPostEffects;
            rename rsPostEffects1 "ISO_maya2019" ;
            redshiftChangeGlobalShader ISO_maya2019 "postEffects";
            print ("Creat_ISO_maya2019"+"\n");
        }





