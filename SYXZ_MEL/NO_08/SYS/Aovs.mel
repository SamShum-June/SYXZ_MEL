
////////////// Creat AOVs & ISO 选择你需要Creat的Aovs 和 ISO使用的maya版本 /////////////////////////////
    /////////////选择Creat AOVs 的种类//////
        ///////////Creat Full AOVs
            global proc RS_Full_Aovs(){
                RScustom_AO_Aov();
                RScustom_OC_Aov();
                RS_Emission_Aov();
                RS_DiffuseFilter_Aov();
                RS_DiffuseLightingRaw_Aov();
                RS_MotionVectors_Aov();
                RS_ReflectionsFilter_Aov();
                RS_ReflectionsRaw_Aov();
                RS_RefractionsFilter_Aov();
                RS_RefractionsRaw_Aov();
                RS_SpecularLighting_Aov();
                RS_TransGIRaw_Aov();
                RS_TransLightingRaw_Aov();
                RS_VolumeFogEmission_Aov();
                RS_Shadows_Aov();
                RS_P_Aov();
                RS_Z_Aov();
                RS_N_Aov();
                RS_SSSRaw_Aov();
                RS_SSS_Aov();
                RS_GIRaw_Aov();
                headsUpMessage -time 5 ("设置 Full Aovs"+"\n");
            }
        ///////////Creat POSE AOVs
            global proc RS_Pose_Aovs(){
                RScustom_AO_Aov();
                RScustom_OC_Aov();
                RS_DiffuseFilter_Aov();
                RS_Emission_Aov();
                RS_ReflectionsRaw_Aov();
                RS_SpecularLighting_Aov();
                RS_SSSRaw_Aov();
                RS_SSS_Aov();
                headsUpMessage -time 5 ("设置 Pose Aovs"+"\n");
            }
        ///////////Creat SEN AOVs
            global proc RS_Sen_Aovs(){
                RScustom_AO_Aov();
                RS_Emission_Aov();
                RS_DiffuseFilter_Aov();
                RS_ReflectionsRaw_Aov();
                RS_Shadows_Aov();
                RS_TransGIRaw_Aov();
                RS_GIRaw_Aov();
                RS_SpecularLighting_Aov();
                RS_P_Aov();
                RS_Z_Aov();
                RS_N_Aov();
                RS_VolumeFogEmission_Aov();
                RS_TransLightingRaw_Aov();
                headsUpMessage -time 5 ("设置 Sen Aovs"+"\n");
            }
        ///////////// AOVs prs ///////////////////////////////////////////////////////////////////
            //Creat AOV AO
                global proc RScustom_AO_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "rs_AO"`){
                    rename (`redshiftCreateAov ("Custom")`) "rs_AO";
                    setAttr -type "string" rs_AO.name "AO";
                    }
                    if(!`objExists  "RS_aovAO_set_shader"`){
                    shadingNode -n "RS_aovAO_set_shader" -asUtility RedshiftAmbientOcclusion;
                    connectAttr -force RS_aovAO_set_shader.outColor rs_AO.defaultShader;
                    }
                    setAttr "RS_aovAO_set_shader.numSamples" 2048;
                    setAttr "RS_aovAO_set_shader.spread" 0.8;
                    setAttr "RS_aovAO_set_shader.fallOff" 3;
                    setAttr "RS_aovAO_set_shader.maxDistance" 10;
                    setAttr "rs_AO.enabled" 0;
                    setAttr "rs_AO.exrBits" 32;
                    setAttr -type "string" rs_AO.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_AO.dataType" 2;
                    setAttr "rs_AO.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_AO"+"\n");
                }
            //Creat AOV OC
                global proc RScustom_OC_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "rs_OC"`){
                    rename (`redshiftCreateAov ("Custom")`) "rs_OC";
                    setAttr -type "string" rs_OC.name "OC";
                    }
                    if(!`objExists  "RS_aovOC_set_shader"`){
                    shadingNode -n "RS_aovOC_set_shader" -asUtility ramp;
                    shadingNode -n "RS_aovOC_set_sampleshader" -asUtility samplerInfo;
                    connectAttr -force RS_aovOC_set_shader.outColor rs_OC.defaultShader;
                    }
                    setAttr RS_aovOC_set_shader.colorEntryList[2].color -type double3 0.547278 0.547278 0.547278;
                    setAttr RS_aovOC_set_shader.colorEntryList[2].position 0.547278;
                    setAttr "RS_aovOC_set_shader.colorEntryList[0].color" -type double3 1 1 1 ;
                    setAttr "RS_aovOC_set_shader.colorEntryList[1].color" -type double3 0 0 0 ;
                    setAttr "RS_aovOC_set_shader.colorEntryList[2].position" 0.344;
                    setAttr "RS_aovOC_set_shader.colorEntryList[2].color" -type double3 0 0 0 ;
                    setAttr "RS_aovOC_set_shader.colorEntryList[1].position" 1;
                    setAttr "RS_aovOC_set_shader.colorEntryList[0].position" 0;
                    connectAttr -f RS_aovOC_set_sampleshader.facingRatio RS_aovOC_set_shader.vCoord;
                    setAttr "RS_aovOC_set_shader.type" 0;
                    setAttr "RS_aovOC_set_shader.interpolation" 4;
                    setAttr "rs_OC.enabled" 0;
                    setAttr "rs_OC.exrBits" 32;
                    setAttr -type "string" rs_OC.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_OC.dataType" 2;
                    setAttr "rs_OC.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_OC"+"\n");
                }
            //Creat AOV Emission
                global proc RS_Emission_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "Emission"`){
                    rename (`redshiftCreateAov ("Emission")`) "rs_Emission";
                    setAttr -type "string" rs_Emission.name "Emission";
                    }
                    setAttr "rs_Emission.enabled" 0;
                    setAttr "rs_Emission.exrBits" 32;
                    setAttr -type "string" rs_Emission.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_Emission.dataType" 2;
                    setAttr "rs_Emission.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Emission"+"\n");
                }
            //Creat AOV DiffuseFilter
                global proc RS_DiffuseFilter_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "DiffuseFilter"`){
                    rename (`redshiftCreateAov ("Diffuse Filter")`) "rs_DiffuseFilter";
                    setAttr -type "string" rs_DiffuseFilter.name "DiffuseFilter";
                    }
                    setAttr "rs_DiffuseFilter.enabled" 0;
                    setAttr "rs_DiffuseFilter.exrBits" 32;
                    setAttr -type "string" rs_DiffuseFilter.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_DiffuseFilter.dataType" 2;
                    setAttr "rs_DiffuseFilter.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_DiffuseFilter"+"\n");
                }
            //Creat AOV Diffuse Lighting Raw
                global proc RS_DiffuseLightingRaw_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "DiffuseLightingRaw"`){
                    rename (`redshiftCreateAov ("Diffuse Lighting Raw")`) "rs_DiffuseLightingRaw";
                    setAttr -type "string" rs_DiffuseLightingRaw.name "DiffuseLightingRaw";
                    }
                    setAttr "rs_DiffuseLightingRaw.enabled" 0;
                    setAttr "rs_DiffuseLightingRaw.exrBits" 32;
                    setAttr -type "string" rs_DiffuseLightingRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_DiffuseLightingRaw.dataType" 2;
                    setAttr "rs_DiffuseLightingRaw.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Diffuse Lighting Raw"+"\n");
                }
            //Creat AOV Motion Vectors
                global proc RS_MotionVectors_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "MotionVectors"`){
                    rename (`redshiftCreateAov ("Motion Vectors")`) "rs_MotionVectors";
                    setAttr -type "string" rs_MotionVectors.name "MotionVectors";
                    }
                    setAttr "rs_MotionVectors.enabled" 0;
                    setAttr "rs_MotionVectors.exrBits" 32;
                    setAttr -type "string" rs_MotionVectors.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_MotionVectors.dataType" 2;
                    setAttr "rs_MotionVectors.fileFormat" $Export_sth;
                    setAttr "rs_MotionVectors.outputRawVectors" 1;
                    redshiftUpdateActiveAovList();
                    print ("rs_Motion Vectors"+"\n");
                }
            //Creat AOV Normals
                global proc RS_N_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "N"`){
                    rename (`redshiftCreateAov ("Normals")`) "rs_N";
                    setAttr -type "string" rs_N.name "N";
                    }
                    setAttr "rs_N.enabled" 0;
                    setAttr "rs_N.exrBits" 32;
                    setAttr -type "string" rs_N.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_N.dataType" 2;
                    setAttr "rs_N.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Normals"+"\n");
                }
            //Creat AOV Reflections Filter
                global proc RS_ReflectionsFilter_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "ReflectionsFilter"`){
                    rename (`redshiftCreateAov ("Reflections Filter")`) "rs_ReflectionsFilter";
                    setAttr -type "string" rs_ReflectionsFilter.name "ReflectionsFilter";
                    }
                    setAttr "rs_ReflectionsFilter.enabled" 0;
                    setAttr "rs_ReflectionsFilter.exrBits" 32;
                    setAttr -type "string" rs_ReflectionsFilter.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_ReflectionsFilter.dataType" 2;
                    setAttr "rs_ReflectionsFilter.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Reflections Filter"+"\n");
                }
            //Creat AOV Reflections Raw
                global proc RS_ReflectionsRaw_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "ReflectionsRaw"`){
                    rename (`redshiftCreateAov ("Reflections Raw")`) "rs_ReflectionsRaw";
                    setAttr -type "string" rs_ReflectionsRaw.name "ReflectionsRaw";
                    }
                    setAttr "rs_ReflectionsRaw.enabled" 0;
                    setAttr "rs_ReflectionsRaw.exrBits" 32;
                    setAttr -type "string" rs_ReflectionsRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_ReflectionsRaw.dataType" 2;
                    setAttr "rs_ReflectionsRaw.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Reflections Raw"+"\n");
                }
            //Creat AOV Refractions Filter
                global proc RS_RefractionsFilter_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "RefractionsFilter"`){
                    rename (`redshiftCreateAov ("Refractions Filter")`) "rs_RefractionsFilter";
                    setAttr -type "string" rs_RefractionsFilter.name "RefractionsFilter";
                    }
                    setAttr "rs_RefractionsFilter.enabled" 0;
                    setAttr "rs_RefractionsFilter.exrBits" 32;
                    setAttr -type "string" rs_RefractionsFilter.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_RefractionsFilter.dataType" 2;
                    setAttr "rs_RefractionsFilter.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Refractions Filter"+"\n");
                }
            //Creat AOV Refractions Raw
                global proc RS_RefractionsRaw_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "RefractionsRaw"`){
                    rename (`redshiftCreateAov ("Refractions Raw")`) "rs_RefractionsRaw";
                    setAttr -type "string" rs_RefractionsRaw.name "RefractionsRaw";
                    }
                    setAttr "rs_RefractionsRaw.enabled" 0;
                    setAttr "rs_RefractionsRaw.exrBits" 32;
                    setAttr -type "string" rs_RefractionsRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_RefractionsRaw.dataType" 2;
                    setAttr "rs_RefractionsRaw.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Refractions Raw"+"\n");
                }
            //Creat AOV Specular Lighting
                global proc RS_SpecularLighting_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "SpecularLighting"`){
                    rename (`redshiftCreateAov ("Specular Lighting")`) "rs_SpecularLighting";
                    setAttr -type "string" rs_SpecularLighting.name "SpecularLighting";
                    }
                    setAttr "rs_SpecularLighting.enabled" 0;
                    setAttr "rs_SpecularLighting.exrBits" 32;
                    setAttr -type "string" rs_SpecularLighting.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_SpecularLighting.dataType" 2;
                    setAttr "rs_SpecularLighting.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Specular Lighting"+"\n");
                }
            //Creat AOV Sub Surface Scatter Raw
                global proc RS_SSSRaw_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "SSSRaw"`){
                    rename (`redshiftCreateAov ("Sub Surface Scatter Raw")`) "rs_SSSRaw";
                    setAttr -type "string" rs_SSSRaw.name "SSSRaw";
                    }
                    setAttr "rs_SSSRaw.enabled" 0;
                    setAttr "rs_SSSRaw.exrBits" 32;
                    setAttr -type "string" rs_SSSRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_SSSRaw.dataType" 2;
                    setAttr "rs_SSSRaw.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Sub Surface Scatter Raw"+"\n");
                }
            //Creat AOV Sub Surface Scatter
                global proc RS_SSS_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "SSS"`){
                    rename (`redshiftCreateAov ("Sub Surface Scatter")`) "rs_SSS";
                    setAttr -type "string" rs_SSS.name "SSS";
                    }
                    setAttr "rs_SSS.enabled" 0;
                    setAttr "rs_SSS.exrBits" 32;
                    setAttr -type "string" rs_SSS.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_SSS.dataType" 2;
                    setAttr "rs_SSS.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Sub Surface Scatter"+"\n");
                }
            //Creat AOV Translucency Lighting Raw
                global proc RS_TransLightingRaw_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "TransLightingRaw"`){
                    rename (`redshiftCreateAov ("Translucency Lighting Raw")`) "rs_TransLightingRaw";
                    setAttr -type "string" rs_TransLightingRaw.name "TransLightingRaw";
                    }
                    setAttr "rs_TransLightingRaw.enabled" 0;
                    setAttr "rs_TransLightingRaw.exrBits" 32;
                    setAttr -type "string" rs_TransLightingRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_TransLightingRaw.dataType" 2;
                    setAttr "rs_TransLightingRaw.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Translucency Lighting Raw"+"\n");
                }
            //Creat AOV World Position
                global proc RS_P_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "P"`){
                    rename (`redshiftCreateAov ("World Position")`) "rs_P";
                    setAttr -type "string" rs_P.name "P";
                    }
                    setAttr "rs_P.enabled" 0;
                    setAttr "rs_P.exrBits" 32;
                    setAttr -type "string" rs_P.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_P.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_World Position"+"\n");
                }
            //Creat AOV Depth
                global proc RS_Z_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "Z"`){
                    rename (`redshiftCreateAov ("Depth")`) "rs_Z";
                    setAttr -type "string" rs_Z.name "Z";
                    }
                    setAttr "rs_Z.enabled" 0;
                    setAttr "rs_Z.exrBits" 32;
                    setAttr -type "string" rs_Z.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    //setAttr "rs_Z.dataType" 2;
                    setAttr "rs_Z.fileFormat" $Export_sth;
                    setAttr "rs_Z.filterMode" 3;
                    setAttr "rs_Z.depthMode" 1;
                    setAttr "rs_Z.useCameraNearFar" 0;
                    setAttr "rs_Z.minDepth" 0;
                    setAttr "rs_Z.maxDepth" 100000;
                    redshiftUpdateActiveAovList();
                    print ("rs_Depth"+"\n");
                }
            //Creat AOV Volume Fog Emission
                global proc RS_VolumeFogEmission_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "VolumeFogEmission"`){
                    rename (`redshiftCreateAov ("Volume Fog Emission")`) "rs_VolumeFogEmission";
                    setAttr -type "string" rs_VolumeFogEmission.name "VolumeFogEmission";
                    }
                    setAttr "rs_VolumeFogEmission.enabled" 0;
                    setAttr "rs_VolumeFogEmission.exrBits" 32;
                    setAttr -type "string" rs_VolumeFogEmission.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_VolumeFogEmission.dataType" 2;
                    setAttr "rs_VolumeFogEmission.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Volume Fog Emission"+"\n");
                }
            //Creat AOV Shadows
                global proc RS_Shadows_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "Shadows"`){
                    rename (`redshiftCreateAov ("Shadows")`) "rs_Shadows";
                    setAttr -type "string" rs_Shadows.name "Shadows";
                    }
                    setAttr "rs_Shadows.enabled" 0;
                    setAttr "rs_Shadows.exrBits" 32;
                    setAttr -type "string" rs_Shadows.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_Shadows.dataType" 2;
                    setAttr "rs_Shadows.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Shadows"+"\n");
                }
            //Creat AOV Global Illumination Raw
                global proc RS_GIRaw_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "GIRaw"`){
                    rename (`redshiftCreateAov ("Global Illumination Raw")`) "rs_GIRaw";
                    setAttr -type "string" rs_GIRaw.name "GIRaw";
                    }
                    setAttr "rs_GIRaw.enabled" 0;
                    setAttr "rs_GIRaw.exrBits" 32;
                    setAttr -type "string" rs_GIRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_GIRaw.dataType" 2;
                    setAttr "rs_GIRaw.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Global Illumination Raw"+"\n");
                }

            //Creat AOV Translucency GI Raw
                global proc RS_TransGIRaw_Aov(){
                    global int $Export_sth ;
                    source redshiftCreateAovTab;
                    setAttr "defaultRenderGlobals.enableDefaultLight" 0;
                    if(!`objExists "TransGIRaw"`){
                    rename (`redshiftCreateAov ("Translucency GI Raw")`) "rs_TransGIRaw";
                    setAttr -type "string" rs_TransGIRaw.name "TransGIRaw";
                    }
                    setAttr "rs_TransGIRaw.enabled" 0;
                    setAttr "rs_TransGIRaw.exrBits" 32;
                    setAttr -type "string" rs_TransGIRaw.filePrefix "<BeautyPath>/<BeautyFile>.<RenderPass>";
                    setAttr "rs_TransGIRaw.dataType" 2;
                    setAttr "rs_TransGIRaw.fileFormat" $Export_sth;
                    redshiftUpdateActiveAovList();
                    print ("rs_Translucency GI Raw"+"\n");
                }
